{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":6517086,"sourceType":"datasetVersion","datasetId":3767458}],"dockerImageVersionId":30698,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"# 1. Connect to SQLite Database","metadata":{}},{"cell_type":"code","source":"%load_ext sql","metadata":{"execution":{"iopub.status.busy":"2024-05-14T03:59:45.346942Z","iopub.execute_input":"2024-05-14T03:59:45.347444Z","iopub.status.idle":"2024-05-14T03:59:45.355482Z","shell.execute_reply.started":"2024-05-14T03:59:45.347409Z","shell.execute_reply":"2024-05-14T03:59:45.353767Z"},"trusted":true},"execution_count":23,"outputs":[{"name":"stdout","text":"The sql extension is already loaded. To reload it, use:\n  %reload_ext sql\n","output_type":"stream"}]},{"cell_type":"code","source":"%%sql\nsqlite:////kaggle/input/movie-data-analytics-dataset/movie.sqlite","metadata":{"execution":{"iopub.status.busy":"2024-05-14T03:59:45.357884Z","iopub.execute_input":"2024-05-14T03:59:45.358255Z","iopub.status.idle":"2024-05-14T03:59:45.444585Z","shell.execute_reply.started":"2024-05-14T03:59:45.358226Z","shell.execute_reply":"2024-05-14T03:59:45.443370Z"},"trusted":true},"execution_count":24,"outputs":[]},{"cell_type":"code","source":"%%sql\n    SELECT *\n    FROM IMDB i","metadata":{"execution":{"iopub.status.busy":"2024-05-14T03:59:45.446353Z","iopub.execute_input":"2024-05-14T03:59:45.446687Z"},"trusted":true},"execution_count":null,"outputs":[{"name":"stdout","text":" * sqlite:////kaggle/input/movie-data-analytics-dataset/movie.sqlite\nDone.\n","output_type":"stream"}]},{"cell_type":"markdown","source":"# 2. Analysis Questions and Answers","metadata":{}},{"cell_type":"markdown","source":"## 2.1. Rank genres by average rating\nWe'll opt for `DENSE_RANK()` instead of `RANK()` to make sure the ranks are consecutive in case of ties.","metadata":{}},{"cell_type":"code","source":"%%sql\n\nSELECT \n    DENSE_RANK() OVER (ORDER BY AVG(Rating) DESC) as rank,\n    genre,\n    ROUND(AVG(Rating), 2) AS avg_rating\nFROM IMDB i\nJOIN genre g\nON i.Movie_id = g.Movie_id\nWHERE genre != \"\"\nGROUP BY genre\nORDER BY avg_rating DESC;","metadata":{"execution":{"iopub.execute_input":"2024-05-14T03:59:45.496797Z","iopub.status.idle":"2024-05-14T03:59:45.512493Z","shell.execute_reply.started":"2024-05-14T03:59:45.496740Z","shell.execute_reply":"2024-05-14T03:59:45.511357Z"},"trusted":true},"execution_count":26,"outputs":[{"name":"stdout","text":" * sqlite:////kaggle/input/movie-data-analytics-dataset/movie.sqlite\nDone.\n","output_type":"stream"},{"execution_count":26,"output_type":"execute_result","data":{"text/plain":"[(1, 'Music', 8.23),\n (2, 'Western', 8.0),\n (3, 'Sci-Fi', 7.99),\n (4, 'History', 7.95),\n (5, 'Mystery', 7.91),\n (6, 'Animation', 7.9),\n (7, 'Adventure', 7.9),\n (8, 'Action', 7.88),\n (9, 'Crime', 7.87),\n (10, 'Thriller', 7.86),\n (11, 'Biography', 7.86),\n (12, 'Drama', 7.86),\n (13, 'Comedy', 7.85),\n (14, 'Fantasy', 7.81),\n (15, 'Sport', 7.8),\n (16, 'Romance', 7.78),\n (17, 'Family', 7.67),\n (18, 'War', 7.6),\n (18, 'Musical', 7.6),\n (18, 'Horror', 7.6)]","text/html":"<table>\n    <thead>\n        <tr>\n            <th>rank</th>\n            <th>genre</th>\n            <th>avg_rating</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>1</td>\n            <td>Music</td>\n            <td>8.23</td>\n        </tr>\n        <tr>\n            <td>2</td>\n            <td>Western</td>\n            <td>8.0</td>\n        </tr>\n        <tr>\n            <td>3</td>\n            <td>Sci-Fi</td>\n            <td>7.99</td>\n        </tr>\n        <tr>\n            <td>4</td>\n            <td>History</td>\n            <td>7.95</td>\n        </tr>\n        <tr>\n            <td>5</td>\n            <td>Mystery</td>\n            <td>7.91</td>\n        </tr>\n        <tr>\n            <td>6</td>\n            <td>Animation</td>\n            <td>7.9</td>\n        </tr>\n        <tr>\n            <td>7</td>\n            <td>Adventure</td>\n            <td>7.9</td>\n        </tr>\n        <tr>\n            <td>8</td>\n            <td>Action</td>\n            <td>7.88</td>\n        </tr>\n        <tr>\n            <td>9</td>\n            <td>Crime</td>\n            <td>7.87</td>\n        </tr>\n        <tr>\n            <td>10</td>\n            <td>Thriller</td>\n            <td>7.86</td>\n        </tr>\n        <tr>\n            <td>11</td>\n            <td>Biography</td>\n            <td>7.86</td>\n        </tr>\n        <tr>\n            <td>12</td>\n            <td>Drama</td>\n            <td>7.86</td>\n        </tr>\n        <tr>\n            <td>13</td>\n            <td>Comedy</td>\n            <td>7.85</td>\n        </tr>\n        <tr>\n            <td>14</td>\n            <td>Fantasy</td>\n            <td>7.81</td>\n        </tr>\n        <tr>\n            <td>15</td>\n            <td>Sport</td>\n            <td>7.8</td>\n        </tr>\n        <tr>\n            <td>16</td>\n            <td>Romance</td>\n            <td>7.78</td>\n        </tr>\n        <tr>\n            <td>17</td>\n            <td>Family</td>\n            <td>7.67</td>\n        </tr>\n        <tr>\n            <td>18</td>\n            <td>War</td>\n            <td>7.6</td>\n        </tr>\n        <tr>\n            <td>18</td>\n            <td>Musical</td>\n            <td>7.6</td>\n        </tr>\n        <tr>\n            <td>18</td>\n            <td>Horror</td>\n            <td>7.6</td>\n        </tr>\n    </tbody>\n</table>"},"metadata":{}}]},{"cell_type":"markdown","source":"## 2.2. What are the top 5 lowest-rating movies? What are their genres, budgets, and runtimes?","metadata":{}},{"cell_type":"code","source":"%%sql\n\nSELECT \n    Title,\n    Rating,\n    genre as Genre,\n    Budget,\n    Runtime\nFROM IMDB i\nLEFT JOIN genre g\n    ON i.Movie_id = g.Movie_id\nORDER BY Rating ASC\nLIMIT 5;","metadata":{"execution":{"iopub.status.busy":"2024-05-14T03:59:45.514556Z","iopub.execute_input":"2024-05-14T03:59:45.515580Z","iopub.status.idle":"2024-05-14T03:59:45.530916Z","shell.execute_reply.started":"2024-05-14T03:59:45.515540Z","shell.execute_reply":"2024-05-14T03:59:45.529606Z"},"trusted":true},"execution_count":27,"outputs":[{"name":"stdout","text":" * sqlite:////kaggle/input/movie-data-analytics-dataset/movie.sqlite\nDone.\n","output_type":"stream"},{"execution_count":27,"output_type":"execute_result","data":{"text/plain":"[('Hugo\\xa0(2011)', 7.5, 'Adventure', 150000000.0, '126 min'),\n ('Hugo\\xa0(2011)', 7.5, 'Drama', 150000000.0, '126 min'),\n ('Hugo\\xa0(2011)', 7.5, 'Family', 150000000.0, '126 min'),\n ('Lone Survivor\\xa0(2013)', 7.5, 'Action', 40000000.0, '121 min'),\n ('Lone Survivor\\xa0(2013)', 7.5, 'Biography', 40000000.0, '121 min')]","text/html":"<table>\n    <thead>\n        <tr>\n            <th>Title</th>\n            <th>Rating</th>\n            <th>Genre</th>\n            <th>Budget</th>\n            <th>Runtime</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>Hugo (2011)</td>\n            <td>7.5</td>\n            <td>Adventure</td>\n            <td>150000000.0</td>\n            <td>126 min</td>\n        </tr>\n        <tr>\n            <td>Hugo (2011)</td>\n            <td>7.5</td>\n            <td>Drama</td>\n            <td>150000000.0</td>\n            <td>126 min</td>\n        </tr>\n        <tr>\n            <td>Hugo (2011)</td>\n            <td>7.5</td>\n            <td>Family</td>\n            <td>150000000.0</td>\n            <td>126 min</td>\n        </tr>\n        <tr>\n            <td>Lone Survivor (2013)</td>\n            <td>7.5</td>\n            <td>Action</td>\n            <td>40000000.0</td>\n            <td>121 min</td>\n        </tr>\n        <tr>\n            <td>Lone Survivor (2013)</td>\n            <td>7.5</td>\n            <td>Biography</td>\n            <td>40000000.0</td>\n            <td>121 min</td>\n        </tr>\n    </tbody>\n</table>"},"metadata":{}}]},{"cell_type":"markdown","source":"Looks like there are duplicate `Titles` in the `genre` table so the result doesn't include all 5 movies. Let's improve this query.","metadata":{}},{"cell_type":"code","source":"%%sql\n\nSELECT \n    Title,\n    Rating,\n    genre as Genre,\n    Budget,\n    Runtime\nFROM IMDB i\nJOIN genre g\nON i.Movie_id = g.Movie_id\nWHERE Title IN (\n    SELECT Title\n    FROM IMDB\n    ORDER BY Rating\n    LIMIT 5\n);","metadata":{"execution":{"iopub.status.busy":"2024-05-14T03:59:45.533058Z","iopub.execute_input":"2024-05-14T03:59:45.533622Z","iopub.status.idle":"2024-05-14T03:59:45.551343Z","shell.execute_reply.started":"2024-05-14T03:59:45.533584Z","shell.execute_reply":"2024-05-14T03:59:45.550276Z"},"trusted":true},"execution_count":28,"outputs":[{"name":"stdout","text":" * sqlite:////kaggle/input/movie-data-analytics-dataset/movie.sqlite\nDone.\n","output_type":"stream"},{"execution_count":28,"output_type":"execute_result","data":{"text/plain":"[('127 Hours (2010)', 7.6, 'Adventure', 18000000.0, '94 min'),\n ('127 Hours (2010)', 7.6, 'Biography', 18000000.0, '94 min'),\n ('127 Hours (2010)', 7.6, 'Drama', 18000000.0, '94 min'),\n ('Bridge of Spies\\xa0(2015)', 7.6, 'Drama', 40000000.0, '142 min'),\n ('Bridge of Spies\\xa0(2015)', 7.6, 'History', 40000000.0, '142 min'),\n ('Bridge of Spies\\xa0(2015)', 7.6, 'Thriller', 40000000.0, '142 min'),\n ('Hugo\\xa0(2011)', 7.5, 'Adventure', 150000000.0, '126 min'),\n ('Hugo\\xa0(2011)', 7.5, 'Drama', 150000000.0, '126 min'),\n ('Hugo\\xa0(2011)', 7.5, 'Family', 150000000.0, '126 min'),\n ('Lone Survivor\\xa0(2013)', 7.5, 'Action', 40000000.0, '121 min'),\n ('Lone Survivor\\xa0(2013)', 7.5, 'Biography', 40000000.0, '121 min'),\n ('Lone Survivor\\xa0(2013)', 7.5, 'Drama', 40000000.0, '121 min'),\n ('Scott Pilgrim vs. the World\\xa0(2010)', 7.5, 'Action', 60000000.0, '112 min'),\n ('Scott Pilgrim vs. the World\\xa0(2010)', 7.5, 'Comedy', 60000000.0, '112 min'),\n ('Scott Pilgrim vs. the World\\xa0(2010)', 7.5, 'Romance', 60000000.0, '112 min')]","text/html":"<table>\n    <thead>\n        <tr>\n            <th>Title</th>\n            <th>Rating</th>\n            <th>Genre</th>\n            <th>Budget</th>\n            <th>Runtime</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>127 Hours (2010)</td>\n            <td>7.6</td>\n            <td>Adventure</td>\n            <td>18000000.0</td>\n            <td>94 min</td>\n        </tr>\n        <tr>\n            <td>127 Hours (2010)</td>\n            <td>7.6</td>\n            <td>Biography</td>\n            <td>18000000.0</td>\n            <td>94 min</td>\n        </tr>\n        <tr>\n            <td>127 Hours (2010)</td>\n            <td>7.6</td>\n            <td>Drama</td>\n            <td>18000000.0</td>\n            <td>94 min</td>\n        </tr>\n        <tr>\n            <td>Bridge of Spies (2015)</td>\n            <td>7.6</td>\n            <td>Drama</td>\n            <td>40000000.0</td>\n            <td>142 min</td>\n        </tr>\n        <tr>\n            <td>Bridge of Spies (2015)</td>\n            <td>7.6</td>\n            <td>History</td>\n            <td>40000000.0</td>\n            <td>142 min</td>\n        </tr>\n        <tr>\n            <td>Bridge of Spies (2015)</td>\n            <td>7.6</td>\n            <td>Thriller</td>\n            <td>40000000.0</td>\n            <td>142 min</td>\n        </tr>\n        <tr>\n            <td>Hugo (2011)</td>\n            <td>7.5</td>\n            <td>Adventure</td>\n            <td>150000000.0</td>\n            <td>126 min</td>\n        </tr>\n        <tr>\n            <td>Hugo (2011)</td>\n            <td>7.5</td>\n            <td>Drama</td>\n            <td>150000000.0</td>\n            <td>126 min</td>\n        </tr>\n        <tr>\n            <td>Hugo (2011)</td>\n            <td>7.5</td>\n            <td>Family</td>\n            <td>150000000.0</td>\n            <td>126 min</td>\n        </tr>\n        <tr>\n            <td>Lone Survivor (2013)</td>\n            <td>7.5</td>\n            <td>Action</td>\n            <td>40000000.0</td>\n            <td>121 min</td>\n        </tr>\n        <tr>\n            <td>Lone Survivor (2013)</td>\n            <td>7.5</td>\n            <td>Biography</td>\n            <td>40000000.0</td>\n            <td>121 min</td>\n        </tr>\n        <tr>\n            <td>Lone Survivor (2013)</td>\n            <td>7.5</td>\n            <td>Drama</td>\n            <td>40000000.0</td>\n            <td>121 min</td>\n        </tr>\n        <tr>\n            <td>Scott Pilgrim vs. the World (2010)</td>\n            <td>7.5</td>\n            <td>Action</td>\n            <td>60000000.0</td>\n            <td>112 min</td>\n        </tr>\n        <tr>\n            <td>Scott Pilgrim vs. the World (2010)</td>\n            <td>7.5</td>\n            <td>Comedy</td>\n            <td>60000000.0</td>\n            <td>112 min</td>\n        </tr>\n        <tr>\n            <td>Scott Pilgrim vs. the World (2010)</td>\n            <td>7.5</td>\n            <td>Romance</td>\n            <td>60000000.0</td>\n            <td>112 min</td>\n        </tr>\n    </tbody>\n</table>"},"metadata":{}}]},{"cell_type":"markdown","source":"## 2.3. Are the budgets of the top 5 highest-rated movies higher than those of the top 5 lowest-rated movies?\n\nAnswer: Yes, but with the exception of `Whiplash (2014)`.","metadata":{}},{"cell_type":"code","source":"%%sql\n\nWITH highest_rated AS (\n    SELECT Title\n    FROM IMDB\n    ORDER BY Rating DESC\n    LIMIT 5\n),\n\nlowest_rated AS (\n    SELECT Title\n    FROM IMDB\n    ORDER BY Rating\n    LIMIT 5\n)\n\nSELECT \n    Title,\n    CASE\n        WHEN Title IN (SELECT Title FROM highest_rated) THEN \"Highest-rated\"\n        WHEN Title IN (SELECT Title FROM lowest_rated) THEN \"Lowest-rated\"\n    END AS Type,\n    Rating,\n    Worldwide AS Earning\nFROM IMDB i\nJOIN earning e\nON i.Movie_id = e.Movie_id\nWHERE Title in (SELECT Title FROM highest_rated) OR Title IN (SELECT Title FROM lowest_rated)\nORDER BY earning DESC;","metadata":{"execution":{"iopub.status.busy":"2024-05-14T03:59:45.552544Z","iopub.execute_input":"2024-05-14T03:59:45.552905Z","iopub.status.idle":"2024-05-14T03:59:45.568803Z","shell.execute_reply.started":"2024-05-14T03:59:45.552874Z","shell.execute_reply":"2024-05-14T03:59:45.567637Z"},"trusted":true},"execution_count":29,"outputs":[{"name":"stdout","text":" * sqlite:////kaggle/input/movie-data-analytics-dataset/movie.sqlite\nDone.\n","output_type":"stream"},{"execution_count":29,"output_type":"execute_result","data":{"text/plain":"[('The Dark Knight Rises\\xa0(2012)', 'Highest-rated', 8.4, 1084939099.0),\n ('Inception (2010)', 'Highest-rated', 8.8, 825532764.0),\n ('Interstellar\\xa0(2014)', 'Highest-rated', 8.6, 675120017.0),\n ('Django Unchained\\xa0(2012)', 'Highest-rated', 8.4, 425368238.0),\n ('Hugo\\xa0(2011)', 'Lowest-rated', 7.5, 185770160.0),\n ('Bridge of Spies\\xa0(2015)', 'Lowest-rated', 7.6, 165478348.0),\n ('Lone Survivor\\xa0(2013)', 'Lowest-rated', 7.5, 154802912.0),\n ('127 Hours (2010)', 'Lowest-rated', 7.6, 60738797.0),\n ('Whiplash\\xa0(2014)', 'Highest-rated', 8.5, 48982041.0),\n ('Scott Pilgrim vs. the World\\xa0(2010)', 'Lowest-rated', 7.5, 47664559.0)]","text/html":"<table>\n    <thead>\n        <tr>\n            <th>Title</th>\n            <th>Type</th>\n            <th>Rating</th>\n            <th>Earning</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>The Dark Knight Rises (2012)</td>\n            <td>Highest-rated</td>\n            <td>8.4</td>\n            <td>1084939099.0</td>\n        </tr>\n        <tr>\n            <td>Inception (2010)</td>\n            <td>Highest-rated</td>\n            <td>8.8</td>\n            <td>825532764.0</td>\n        </tr>\n        <tr>\n            <td>Interstellar (2014)</td>\n            <td>Highest-rated</td>\n            <td>8.6</td>\n            <td>675120017.0</td>\n        </tr>\n        <tr>\n            <td>Django Unchained (2012)</td>\n            <td>Highest-rated</td>\n            <td>8.4</td>\n            <td>425368238.0</td>\n        </tr>\n        <tr>\n            <td>Hugo (2011)</td>\n            <td>Lowest-rated</td>\n            <td>7.5</td>\n            <td>185770160.0</td>\n        </tr>\n        <tr>\n            <td>Bridge of Spies (2015)</td>\n            <td>Lowest-rated</td>\n            <td>7.6</td>\n            <td>165478348.0</td>\n        </tr>\n        <tr>\n            <td>Lone Survivor (2013)</td>\n            <td>Lowest-rated</td>\n            <td>7.5</td>\n            <td>154802912.0</td>\n        </tr>\n        <tr>\n            <td>127 Hours (2010)</td>\n            <td>Lowest-rated</td>\n            <td>7.6</td>\n            <td>60738797.0</td>\n        </tr>\n        <tr>\n            <td>Whiplash (2014)</td>\n            <td>Highest-rated</td>\n            <td>8.5</td>\n            <td>48982041.0</td>\n        </tr>\n        <tr>\n            <td>Scott Pilgrim vs. the World (2010)</td>\n            <td>Lowest-rated</td>\n            <td>7.5</td>\n            <td>47664559.0</td>\n        </tr>\n    </tbody>\n</table>"},"metadata":{}}]}]}